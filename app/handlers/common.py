from aiogram import Router, types
from aiogram.filters import CommandStart, Command
from app.database.requests import add_user, get_user_by_telegram_id
from app.config import ADMIN_IDS
import app.keyboards.user_keyboards as user_kb
import app.keyboards.admin_keyboards as admin_kb

common_router = Router()


async def is_admin(user_id: int) -> bool:
    return user_id in ADMIN_IDS


@common_router.message(CommandStart())
async def start_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π."""
    user_id = message.from_user.id
    username = message.from_user.username
    full_name = message.from_user.full_name

    print('tld id = ', user_id)

    if await is_admin(user_id):
        # –∞–¥–º–∏–Ω
        await message.reply("–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!", reply_markup=admin_kb.admin_keyboard)
    else:
        # user
        user = await get_user_by_telegram_id(user_id) # –∏—Å–ø–æ–ª—å–∑—É–µ–º await
        if not user:
            await add_user(user_id)
            await message.answer(f"""
            –ü—Ä–∏–≤–µ—Ç!\n–Ø —Ç–≤–æ–π —Ü–∏—Ñ—Ä–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç FinCheckUp –Ω–∞ –ø—É—Ç–∏ –∫ —Ç–≤–æ–∏–º —Ü–µ–ª—è–º. –ü—Ä–æ–π–¥–∏—Ç–µ –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç–ø—Ä–æ—Å.
    üìå –≠—Ç–æ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ 3 –º–∏–Ω—É—Ç—ã!
     """, reply_markup=user_kb.start_test)
            # if user_id in ADMIN_IDS:
            #     await set_admin_status(user_id, True, session)  # –∏—Å–ø–æ–ª—å–∑—É–µ–º await
        else:
            await message.answer(f"""
            –ü—Ä–∏–≤–µ—Ç!\n–Ø —Ç–≤–æ–π —Ü–∏—Ñ—Ä–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç FinCheckUp –Ω–∞ –ø—É—Ç–∏ –∫ —Ç–≤–æ–∏–º —Ü–µ–ª—è–º. –ü—Ä–æ–π–¥–∏—Ç–µ –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç–ø—Ä–æ—Å.
    üìå –≠—Ç–æ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ 3 –º–∏–Ω—É—Ç—ã!
     """, reply_markup=user_kb.start_test)


@common_router.message(Command("help"))
async def help_handler(message: types.Message):
    await message.answer("–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º ...")
